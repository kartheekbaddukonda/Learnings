https://codelabs.solace.dev/codelabs/helm-environment-setup/#1
https://www.microsoft.com/en-in/p/ubuntu-2004-lts/9n6svws3rx71?rtc=1&activetab=pivot:overviewtab

WSL - kartheekb / nayan

to have wsl in vs link to ubunty - view->command palette "Remote-WSL: New Window Using Distro..." command to open a remote window to Ubuntu WSL.

Helm client:
>   The helm client stores information in local directory referred to as  helm home.
> default is $HOME/.helm
> This directory contains configurations and cache data which is created by helm init.
 
Tiller:  (from v2 its depricated)
>   tiller is the cluster component of helm.
>   it interacts directly with k8s API server to install, upgrade , query and remove k8s resources.
>   it also stores objects that represents releases
>   it typically installed by running the command helm init and lives in kube-system namespace (unless instructed otherwise)

3 main components of HELM are : chart, repository , release

Chart: 
>   A chart is a helm package, which contains all resouce definitions necessary to run an application, tool or service inside a k8s cluster.
>   For list of k8s resources you can use link: https://github.com/helm/charts (it contains stable and incubator charts)


hub.helm.sh (now : https://artifacthub.io/)

Repository:
>   is a place where charts can be collected and shared.

Release: 
>   A release is instance of chart running in k8s cluster, one chart can often be installed many times in the same cluster, each time it is installed a new release is created.

Helm commands:
 
helm
helm search hub
helm search hub mysql
helm repo add stable https://charts.helm.sh/stable
helm search repo stable

helm repo list
helm repo update
helm install stable/mysql --generate-name
kubectl get all 
helm install myairflow stable/airflow
helm ls 
helm uninstall myairflow

helm create mychart
create below cm yaml under /mychart/templates/configmap.yaml
        configmap.yaml
        ~~~~~~~~~~~~~
        apiVersion: v1
        kind: ConfigMap
        metadata:
        name: mychart-configmap
        data:
        myvalue: "Sample Config Map"
helm install helm-demo-configmap ./mychart
helm ls
kubectl get all
helm get manifest helm-demo-configmap
kubectl describe configmaps mychart-configmap
helm uninstall helm-demo-configmap

built-in objects: 

    https://helm.sh/docs/chart_template_guide/builtin_objects/
        apiVersion: v1
        kind: ConfigMap
        metadata:
        name: {{ .Release.Name }}-configmap
        data:
        myvalue: "Sample Config Map"
    helm install releasename-test ./mychart
    helm get manifest releasename-test
    helm install --debug --dry-run dryrun-test ./mychart
    kubectl describe configmaps releasename-test-configmap
    helm uninstall releasename-test

read-values from a template:

    mychart/values.yaml
    costCode: CC98112
    costCode: {{ .Values.costCode }}
    helm install --debug --dry-run firstdryrun ./mychart
    helm install firstvalue ./mychart
    helm get manifest firstvalue
    kubectl describe configmaps firstvalue-configmap